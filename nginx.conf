server {
    listen 8080;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Add debug logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log combined;

    # Handle React routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Handle API proxy for development
    location /api/ {
        proxy_pass https://eu-de.apprapp.cloud.ibm.com/;
        proxy_http_version 1.1;
        proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        proxy_ssl_server_name on;
    }

    location /iam/ {
        proxy_pass https://iam.cloud.ibm.com/;
        proxy_http_version 1.1;
        proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        proxy_ssl_server_name on;
    }

    location /resources/ {
        # Debug logging for this location
        error_log /var/log/nginx/resources_error.log debug;
        access_log /var/log/nginx/resources_access.log combined;

        # Rewrite the URL to ensure proper path handling
        rewrite ^/resources/(.*) /$1 break;
        
        proxy_pass https://resource-controller.cloud.ibm.com;
        proxy_http_version 1.1;
        proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        proxy_ssl_server_name on;
        proxy_set_header Host resource-controller.cloud.ibm.com;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add debug headers
        add_header X-Debug-Original-URI $request_uri;
        add_header X-Debug-Proxy-Pass $proxy_pass;
        add_header X-Debug-Rewritten-URI $uri;
        
        # Enable proxy error logging
        proxy_intercept_errors on;
        error_page 404 = @error404;
    }

    location @error404 {
        return 404 '{"error": "Resource not found", "original_uri": "$request_uri", "proxy_pass": "$proxy_pass", "rewritten_uri": "$uri"}';
        add_header Content-Type application/json;
    }
}